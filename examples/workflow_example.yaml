# QCoder Workflow Example
# This file demonstrates workflow automation capabilities

name: Code Quality Workflow
description: Analyze code quality and generate reports
stop_on_error: false  # Continue even if steps fail

steps:
  # Step 1: Check Git status
  - name: Check Git Status
    type: shell
    command: git status --short
    timeout: 10
    fail_on_error: false

  # Step 2: Find Python files
  - name: List Python Files
    type: shell
    command: find . -name "*.py" -type f | head -20
    timeout: 30

  # Step 3: AI code analysis
  - name: Analyze Code Structure
    type: ai_chat
    system_prompt: "You are a senior software engineer specializing in code quality and architecture."
    prompt: |
      Analyze the Python codebase structure in the current directory.

      Provide:
      1. Overall architecture assessment
      2. Code organization quality
      3. Potential improvements
      4. Security concerns
      5. Testing recommendations

      Be concise but thorough.
    temperature: 0.3

  # Step 4: Count lines of code
  - name: Count Lines of Code
    type: shell
    command: |
      echo "Python LOC:" && find . -name "*.py" -type f -exec wc -l {} + | tail -1
    fail_on_error: false

  # Step 5: Check for common issues
  - name: Check for TODO Comments
    type: shell
    command: grep -r "TODO" --include="*.py" . | wc -l
    fail_on_error: false

  # Step 6: Generate security review
  - name: Security Review
    type: ai_chat
    prompt: |
      Review the codebase for potential security issues:

      Focus on:
      - Input validation
      - Authentication/Authorization
      - SQL injection risks
      - XSS vulnerabilities
      - Sensitive data handling

      Provide specific recommendations.
    temperature: 0.2

  # Step 7: Create summary report
  - name: Write Analysis Report
    type: file_operation
    operation: write
    path: code_quality_report.md
    content: |
      # Code Quality Analysis Report

      Generated by QCoder Workflow

      ## Analysis Completed

      - Git Status: Checked
      - Python Files: Counted
      - Code Structure: Analyzed
      - Security: Reviewed

      See individual step outputs for details.

      ## Next Steps

      1. Review the analysis results
      2. Address high-priority issues
      3. Update documentation
      4. Run tests

  # Step 8: Final notification
  - name: Completion Message
    type: shell
    command: echo "Workflow completed! Check code_quality_report.md for results."

# Additional workflow features:
# - Conditional execution
# - Variable substitution
# - Error handling
# - Parallel execution (future feature)
